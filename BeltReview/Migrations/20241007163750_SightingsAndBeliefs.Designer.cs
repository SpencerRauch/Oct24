// <auto-generated />
using System;
using BeltReview.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeltReview.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20241007163750_SightingsAndBeliefs")]
    partial class SightingsAndBeliefs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BeltReview.Models.Sighting", b =>
                {
                    b.Property<int>("SightingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SightingId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SightingId");

                    b.HasIndex("UserId");

                    b.ToTable("Sightings");
                });

            modelBuilder.Entity("BeltReview.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeltReview.Models.UserSightingBelief", b =>
                {
                    b.Property<int>("UserSightingBeliefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserSightingBeliefId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("SightingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserSightingBeliefId");

                    b.HasIndex("SightingId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSightingBeliefs");
                });

            modelBuilder.Entity("BeltReview.Models.Sighting", b =>
                {
                    b.HasOne("BeltReview.Models.User", "ReportingUser")
                        .WithMany("ReportedSightings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReportingUser");
                });

            modelBuilder.Entity("BeltReview.Models.UserSightingBelief", b =>
                {
                    b.HasOne("BeltReview.Models.Sighting", "BelievedSighting")
                        .WithMany("UserBeliefs")
                        .HasForeignKey("SightingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeltReview.Models.User", "BelievingUser")
                        .WithMany("SightingBeliefs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BelievedSighting");

                    b.Navigation("BelievingUser");
                });

            modelBuilder.Entity("BeltReview.Models.Sighting", b =>
                {
                    b.Navigation("UserBeliefs");
                });

            modelBuilder.Entity("BeltReview.Models.User", b =>
                {
                    b.Navigation("ReportedSightings");

                    b.Navigation("SightingBeliefs");
                });
#pragma warning restore 612, 618
        }
    }
}
